#! validate-crd: deploy/chart/templates/0000_30_02-clusterserviceversion.crd.yaml
#! parse-kind: ClusterServiceVersion
apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion

metadata:
  name: kubestone.v$(VERSION)
  annotations:
    categories: "Developer Tools"
    description: "Kubestone is a benchmarking Operator that can evaluate the performance of Kubernetes installations."
    containerImage: xridge/kubestone:latest
    createdAt: 2019-10-18T12:32:00Z
    repository: https://github.com/xridge/kubestone
    alm-examples: []
    certified: "false"
    support: info@xridge.io

spec:
  #replaces: kubestone:v$(OLDVERSION)
  displayName: Kubestone
  description: |
    Kubestone is a benchmarking Operator that can evaluate the performance of Kubernetes installations.

    Features:
    - Supports common set of benchmarks to measure: CPU, Disk, Network and Application performance
    - Fine-grained control over Kubernetes Scheduling primitives: Affinity, Anti-Affinity, Tolerations, Storage Classes and Node Selection
    - Cloud Native: Benchmarks runs are defined as Custom Resources and executed in the cluster using Kubernetes resources: Pods, Jobs, Deployments and Services.
    - Extensible: New benchmarks can easily be added by implementing a new controller.

    Fore more information please visit [https://kubestone.io/](https://kubestone.io)
  keywords: [performance, benchmark, sysbench, fio, ioping, iperf, drill, pgbench, qperf, sparkbench]

  maintainers:
  - name: xridge.io
    email: info@xridge.io

  provider:
    name: xridge.io

  links:
  - name: Kubestone
    url: https://kubestone.io
  - name: Documentation
    url: https://kubestone.io

  labels:
    alm-status-descriptors: kubestone.v$(VERSION)
    alm-owner-kubestone: kubestone

  selector:
    matchLabels:
      alm-owner-kubestone: kubestone

  icon:
  - base64data: 
    mediatype: image/png

  maturity: alpha
  version: $(VERSION)
  MinKubeVersion: 1.12.0

  installModes:
  - type: OwnNamespace
    supported: false
  - type: SingleNamespace
    supported: false
  - type: MultiNamespace
    supported: false
  - type: AllNamespaces
    supported: true

  install:
    strategy: deployment
    spec:
      permissions:
      - serviceAccountName: kubestone-operator
        rules: []
      deployments:
      - name: kubestone-controller-manager
        spec:
          selector:
            matchLabels:
              control-plane: kubestone-controller-manager
          replicas: 1
          template:
            metadata:
              labels:
                control-plane: kubestone-controller-manager
            spec:
              serviceAccount: kubestone-operator
              containers:
              - command:
                - /manager
                image: xridge/kubestone:latest
                name: kubestone
                resources:
                  requests:
                    cpu: 100m
                    memory: 128Mi
              terminationGracePeriodSeconds: 10

  customresourcedefinitions:
    owned:
     - displayName: drill benchmark
       group: perf.kubestone.xridge.io
       kind: Drill
       name: drills.perf.kubestone.xridge.io
       version: v1alpha1
       description: Drill is a HTTP load testing application written in Rust. The main goal for this project is to build a really lightweight tool as alternative to other that require JVM and other stuff. You can write brenchmark files, in YAML format, describing all the stuff you want to test. It was inspired by Ansible syntax because it is really easy to use and extend.
       resources:
         - kind: ConfigMap
           version: v1
         - kind: Job
           version: v1
       specDescriptors:
       - description: Docker image for the benchmark
         displayName: Image name
         path: image.name
         x-descriptors:
         - urn:alm:descriptor:com.tectonic.ui:label
       statusDescriptors:
       - description: Shows the state of benchmark execution
         displayName: Running
         path: running
         x-descriptors:
         - 'urn:alm:descriptor:com.tectonic.ui:podStatuses'
       - description: Shows the state of benchmark completion
         displayName: Completed
         path: completed
         x-descriptors:
         - 'urn:alm:descriptor:com.tectonic.ui:podStatuses'

     - displayName: fio benchmark
       group: perf.kubestone.xridge.io
       kind: Fio
       name: fios.perf.kubestone.xridge.io
       version: v1alpha1
       description: With the fio benchmark you can measure the I/O performance of the disks used in your Kubernetes cluster.
       resources:
         - kind: ConfigMap
           version: v1
         - kind: Job
           version: v1
       specDescriptors:
       - description: Docker image for the benchmark
         displayName: Image name
         path: image.name
         x-descriptors:
         - urn:alm:descriptor:com.tectonic.ui:label
       statusDescriptors:
       - description: Shows the state of benchmark execution
         displayName: Running
         path: running
         x-descriptors:
         - 'urn:alm:descriptor:com.tectonic.ui:podStatuses'
       - description: Shows the state of benchmark completion
         displayName: Completed
         path: completed
         x-descriptors:
         - 'urn:alm:descriptor:com.tectonic.ui:podStatuses'

     - displayName: ioping benchmark
       group: perf.kubestone.xridge.io
       kind: Ioping
       name: iopings.perf.kubestone.xridge.io
       version: v1alpha1
       description: With ioping benchmark you can measure the latency of the storage I/O subsystem in your Kubernetes cluster.
       resources:
         - kind: Job
           version: v1
       specDescriptors:
       - description: Docker image for the benchmark
         displayName: Image name
         path: image.name
         x-descriptors:
         - urn:alm:descriptor:com.tectonic.ui:label
       statusDescriptors:
       - description: Shows the state of benchmark execution
         displayName: Running
         path: running
         x-descriptors:
         - 'urn:alm:descriptor:com.tectonic.ui:podStatuses'
       - description: Shows the state of benchmark completion
         displayName: Completed
         path: completed
         x-descriptors:
         - 'urn:alm:descriptor:com.tectonic.ui:podStatuses'

     - displayName: iperf3 benchmark
       group: perf.kubestone.xridge.io
       kind: Iperf3
       name: iperf3s.perf.kubestone.xridge.io
       version: v1alpha1
       description: With the iperf3 benchmark, you can measure the I/O performance of the network hardware and stack used in your Kubernetes cluster. 
       resources:
         - kind: Job
           version: v1
         - kind: Deployment
           version: v1
         - kind: Service
           version: v1
       specDescriptors:
       - description: Docker image for the benchmark
         displayName: Image name
         path: image.name
         x-descriptors:
         - urn:alm:descriptor:com.tectonic.ui:label
       statusDescriptors:
       - description: Shows the state of benchmark execution
         displayName: Running
         path: running
         x-descriptors:
         - 'urn:alm:descriptor:com.tectonic.ui:podStatuses'
       - description: Shows the state of benchmark completion
         displayName: Completed
         path: completed
         x-descriptors:
         - 'urn:alm:descriptor:com.tectonic.ui:podStatuses'

     - displayName: qperf benchmark
       group: perf.kubestone.xridge.io
       kind: Qperf
       name: qperves.perf.kubestone.xridge.io
       version: v1alpha1
       description: With the qperf benchmark, you can measure the I/O performance of the network hardware and stack used in your Kubernetes cluster.
       resources:
         - kind: Job
           version: v1
         - kind: Deployment
           version: v1
         - kind: Service
           version: v1
       specDescriptors:
       - description: Docker image for the benchmark
         displayName: Image name
         path: image.name
         x-descriptors:
         - urn:alm:descriptor:com.tectonic.ui:label
       statusDescriptors:
       - description: Shows the state of benchmark execution
         displayName: Running
         path: running
         x-descriptors:
         - 'urn:alm:descriptor:com.tectonic.ui:podStatuses'
       - description: Shows the state of benchmark completion
         displayName: Completed
         path: completed
         x-descriptors:
         - 'urn:alm:descriptor:com.tectonic.ui:podStatuses'

     - displayName: sysbench benchmark
       group: perf.kubestone.xridge.io
       kind: Sysbench
       name: sysbenches.perf.kubestone.xridge.io
       version: v1alpha1
       description: With the sysbench benchmark you can measure the CPU, Memory, Database and Filesystem characteritics of your Kubernetes cluster. 
       resources:
         - kind: Job
           version: v1
       specDescriptors:
       - description: Docker image for the benchmark
         displayName: Image name
         path: image.name
         x-descriptors:
         - urn:alm:descriptor:com.tectonic.ui:label
       statusDescriptors:
       - description: Shows the state of benchmark execution
         displayName: Running
         path: running
         x-descriptors:
         - 'urn:alm:descriptor:com.tectonic.ui:podStatuses'
       - description: Shows the state of benchmark completion
         displayName: Completed
         path: completed
         x-descriptors:
         - 'urn:alm:descriptor:com.tectonic.ui:podStatuses'

     - displayName: pgbench benchmark
       group: perf.kubestone.xridge.io
       kind: Pgbench
       name: pgbenches.perf.kubestone.xridge.io
       version: v1alpha1
       description: With the pgbench benchmark, you can benchmark your PostgreSQL database, which can both run in the same Kubernetes cluster as kubestone, or anywhere else, as long as it's reachable.
       resources:
         - kind: Job
           version: v1
       specDescriptors:
       - description: Docker image for the benchmark
         displayName: Image name
         path: image.name
         x-descriptors:
         - urn:alm:descriptor:com.tectonic.ui:label
       statusDescriptors:
       - description: Shows the state of benchmark execution
         displayName: Running
         path: running
         x-descriptors:
         - 'urn:alm:descriptor:com.tectonic.ui:podStatuses'
       - description: Shows the state of benchmark completion
         displayName: Completed
         path: completed
         x-descriptors:
         - 'urn:alm:descriptor:com.tectonic.ui:podStatuses'